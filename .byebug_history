c
params
c
@session.labels
c
@session
c
params
c
params
c
params
c
@session.labels
@session
@session = Session.new
@session
c
@session
c
@session = Session.find(params[:id])
params
c
f.object.labels.to_a
f.object.labels.to_i
f.object.labels.to_s
f.object.labels
c
@labels
label.name
Session.includes(:labels).where("id" => "#{params[:id]}", "labels.name" => "#{label.name}")
params[:session][:labels]
c
f.object.labels
f.object.labels.name
c
f.object.labels
f.object
c
@session.save
@session.labels.present?
@session.labels
@session
@session.labels << label
@session
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").present?
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}")
c
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").empty?
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}")
unless Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}")
c
@session
c
@session.labels << label
c
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").error
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").errors
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").blank?
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").any?
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").present?
c
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").any?
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").any
Session::ActiveRecord_Relation
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").class
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}")
@session.labels << label
@session.labels << @label
@session.labels << @labe
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}").class
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}")
unless Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").nil?
unless Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").present?
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}").present?
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{label.id}")
c
self.labels.present?
c
params[:session][:labels].compact_blank!
params[:session][:labels].compact
params[:session][:labels].compact_blank!
params[:session][:labels]
c
@labels.map{|lab| lab.name}
@labels.map{|lab| lab}
@labels = Label.find(params[:session][:labels])
params[:session][:labels].compact_blank!
c
params[:session][:labels].first
params[:session][:labels].compact_blank!
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{params[:session][:labels]}")
params[:session][:labels].compact_blank!
params[:session][:labels]
Session.includes(:labels).where("type_of_session" => "#{params[:session][:type_of_session]}", "labels.id" => "#{params[:session][:labels]}")
c
params
parmas
params[:session][:labels].compact_blank!
params.compact_blank!
params
c
params
c
params
c
Label.include?Session
Label.include?1
Label.include?@labels
Label.include?
Label.all
Label.include?@labels
@labels
Label.include?@label
if @session.labels.find(params[:session][:labels]).includes?
if @session.labels.find(params[:session][:labels]).exists?
c
if @session.labels.find(params[:session][:labels]) == nil
@session.labels.find(params[:session][:labels])
@session.labels.find(params[:session][:labels]).nil?
@session.labels.find(params[:session][:labels]).present?
@session.labels.find(params[:session][:labels]).exists?
if @session.labels.find(params[:session][:labels]).exists?
if @session.labels.find(params[:session][:labels]).nil?
@session.labels.find(params[:session][:labels]).nil?
c
@session.labels.find(params[:session][:labels]).nil?
@session.labels.find(params[:session][:labels]).present?
Label.find(params[:session][:labels])
Labels.find(params[:session][:labels])
labels.find(params[:session][:labels])
@session.labels.find(params[:session][:labels])
c
params[:id]
params
c
@lables
@labels = Label.find(params[:session][:labels])
@lables
@session.labels << @lables
@session.save
@session = Session.new(title: params[:session][:title], type_of_session: params[:session][:type_of_session])
@labels = Label.find(params[:session][:labels])
params[:session][:labels] ||= []
params[:session][:labels]
c
params[:societe][:type_taxes_ids]
c
@session.labels << @lables
@session.save
@session = Session.new(title: params[:session][:title], type_of_session: params[:session][:type_of_session])
@labels = Label.find(params[:session][:labels])
c
@session.labels <<  @labels
@session.labels = @labels.to_a
@session.labels = @labels
@labels
@label
@session.labels
@session
@session.labels = @lables
@session.save
@session = Session.new(title: params[:session][:title], type_of_session: params[:session][:type_of_session])
@labels = Label.find(params[:session][:labels])
c
@session = Session.new(permitted_params)
@session = Session.new(permit_params)
permit_params
c
@session.new(permitted_params)
permitted_params
permit_params
c
labels = Label.find(params[:session][:labels])
params[:session][:labels]
params[:session][:label_id]
params
c
params
self
c
self.labels
self.lables
self
params
c
f.object.images.attached?
c
f.object.images.attached?
f.object
c
f.object.images.attached?
f.object.images
f.object
f
c
f.object
f
c
ad.images
c
ad.images.map{|image| image_tag url_for(image), size: "100"}
ad.images
c
self
ad.images
c
params
:images
c
ad.admin_user
ad.admin_users
ad
c
@post.images.map {|image| image }
@post.images.map
@p@post.images.mapost.images.first
@post.images
c
resource.save
resource
Post.new.admin_user_id = admin_user
Post.admin_user_id = admin_user
resource.admin_user_id = admin_user
admin_user = AdminUser.find_by(email: attrs[:admin_user_id]).id
attrs = params[:post]
params
c
params
Parameters
parameters
c
value
post
params
valid_attributes
permit_params
c
valid_attributes
c
params[:post]
params
